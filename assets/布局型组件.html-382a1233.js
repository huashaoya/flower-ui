import{_ as f,M as l,p as c,q as _,N as e,V as a,t,R as n,a1 as r,Q as d}from"./framework-e225a5e3.js";const h={},i=r('<h1 id="布局型组件" tabindex="-1"><a class="header-anchor" href="#布局型组件" aria-hidden="true">#</a> 布局型组件</h1><h2 id="grid布局" tabindex="-1"><a class="header-anchor" href="#grid布局" aria-hidden="true">#</a> grid布局</h2><p><strong>栅栏化布局，基于行（row）和列（col）的部分信息区块</strong></p><h3 id="基本用法" tabindex="-1"><a class="header-anchor" href="#基本用法" aria-hidden="true">#</a> 基本用法</h3>',4),u=d("p",null,"水平排列 使用单一的一组 Row 和 Col 栅格组件，就可以创建一个基本的栅格系统，所有列（Col）必须放在 Row 内",-1),p=d("h3",{id:"对一组row进行划分",tabindex:"-1"},[d("a",{class:"header-anchor",href:"#对一组row进行划分","aria-hidden":"true"},"#"),t(" 对一组Row进行划分")],-1),m=d("p",null,[t("设置 "),d("code",null,"span"),t("属性 来在一行24列栅栏系统里划分")],-1),b=d("h3",{id:"调整间距",tabindex:"-1"},[d("a",{class:"header-anchor",href:"#调整间距","aria-hidden":"true"},"#"),t(" 调整间距")],-1),x=d("p",null,[t("设置"),d("code",null,"gutter"),t("属性 调整列与列，行与行之间的间隔")],-1),g=d("h3",{id:"合并部分区域",tabindex:"-1"},[d("a",{class:"header-anchor",href:"#合并部分区域","aria-hidden":"true"},"#"),t(" 合并部分区域")],-1),w=r('<p>通过<code>span</code> 属性以及对于列元素 <code>fl-col</code> 的相应增加与删除，达到划分、合并区域的效果</p><p>支持使用CSS对元素添加样式，以上案例的样式如下</p><h3 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>gutter</td><td>栅格间隔</td><td>array</td><td>——</td><td>0</td></tr><tr><td>span</td><td>栅格占位格数，为 0 时相当于 <code>display: none</code></td><td>number</td><td>——</td><td>——</td></tr><tr><td>offset</td><td>栅格左侧的间隔格数，间隔内不可以有栅格</td><td>number</td><td>——</td><td>0</td></tr></tbody></table>',4);function y(C,N){const s=l("fl-col"),o=l("fl-row");return c(),_("div",null,[i,e(o,{gutter:[0,0]},{default:a(()=>[e(s,{span:"24",offset:"0",class:"item"},{default:a(()=>[t("1")]),_:1})]),_:1}),u,p,e(o,{gutter:[0,0]},{default:a(()=>[e(s,{span:"6",offset:"0",class:"item"},{default:a(()=>[t("1")]),_:1}),e(s,{span:"6",offset:"0",class:"item"},{default:a(()=>[t("2")]),_:1}),e(s,{span:"6",offset:"0",class:"item"},{default:a(()=>[t("3")]),_:1}),e(s,{span:"6",offset:"0",class:"item"},{default:a(()=>[t("4")]),_:1})]),_:1}),m,b,e(o,{gutter:[8,8]},{default:a(()=>[e(s,{span:"6",offset:"0",class:"item"},{default:a(()=>[t("1")]),_:1}),e(s,{span:"6",offset:"0",class:"item"},{default:a(()=>[t("2")]),_:1}),e(s,{span:"6",offset:"0",class:"item"},{default:a(()=>[t("3")]),_:1}),e(s,{span:"6",offset:"0",class:"item"},{default:a(()=>[t("4")]),_:1})]),_:1}),x,g,e(o,{gutter:[8,8]},{default:a(()=>[e(s,{span:"12",offset:"0",class:"item"},{default:a(()=>[t("1")]),_:1}),n(' <fl-col span="6" offset="0"></fl-col> '),e(s,{span:"6",offset:"0",class:"item"},{default:a(()=>[t("2")]),_:1}),e(s,{span:"6",offset:"0",class:"item"},{default:a(()=>[t("3")]),_:1}),e(s,{span:"6",offset:"0",class:"item"},{default:a(()=>[t("4")]),_:1}),e(s,{span:"6",offset:"0",class:"item"},{default:a(()=>[t("5")]),_:1}),e(s,{span:"12",offset:"0",class:"item"},{default:a(()=>[t("6")]),_:1}),n(' <fl-col span="6" offset="0"></fl-col> ')]),_:1}),w])}const v=f(h,[["render",y],["__file","布局型组件.html.vue"]]);export{v as default};
